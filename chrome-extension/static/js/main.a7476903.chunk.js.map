{"version":3,"sources":["recoil/atoms.js","common/ButtonLink.jsx","common/constants.js","repository/index.js","Login.js","Logout.js","AppHeader.jsx","common/Loading.jsx","common/Title.jsx","common/SearchAndFilter.jsx","common/RemoveButton.jsx","FollowedRepositoryCard.jsx","FollowedRepositories.jsx","ImportRepositoryCard.jsx","ImportRepositories.jsx","SearchGithubRow.jsx","SearchGithub.jsx","AboutUs.jsx","static/img/network.jpg","static/img/overview.png","static/img/tagging.png","Home.js","LoginModal.jsx","Bubble.jsx","ForkCluster.jsx","common/Filter.jsx","Forklist.jsx","DrawerCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["userState","atom","key","default","ButtonLink","_ref","to","linkText","color","startIcon","_jsx","Link","style","textDecoration","children","Button","LOADING_HEIGHT","DARK","PRIMARY","SECONDARY","TERTIARY","REMOVE","getUserFollowedRepositories","async","axios","method","url","headers","Authorization","localStorage","getItem","getRepoForks","value","i","data","repo","index","postUserLogin","post","code","values","fetchFreqForkRepos","fetch","apiEndpoint","then","res","json","postSearchGithub","postFollowRepository","deleteUserRepository","Login","setUser","useSetRecoilState","navigate","useNavigate","isLoggingIn","setIsLoggingIn","useState","useEffect","newUrl","window","location","href","hasCode","includes","console","log","split","submitGithub","_res$data","access_token","setItem","username","error","_Fragment","onClick","onClickLogin","Logout","onClickLogout","removeItem","AppHeader","onOpenDrawer","currentUser","useRecoilValue","Box","sx","flexGrow","AppBar","position","background","_jsxs","Toolbar","IconButton","size","edge","mr","MenuIcon","Typography","variant","component","SignalCellularAltIcon","CloudUploadIcon","SearchIcon","LinkIcon","Loading","loadingMessage","Grid","container","direction","alignItems","justifyContent","minHeight","CircularProgress","defaultProps","Title","text","item","SearchAndFilter","filters","setFilters","setSearch","anchorEl","setAnchorEl","checkedFilter","setCheckedFilter","checkedFilterValues","setCheckedFilterValues","addedFilters","setAddedFilters","searchTerm","setSearchTerm","FilterBubble","_ref2","filter","border","borderRadius","borderColor","padding","onClickRemoveFilter","display","CancelIcon","fontWeight","spacing","TextField","onChange","e","target","placeholder","InputProps","startAdornment","InputAdornment","ButtonBase","event","currentTarget","AddIcon","Popover","open","id","undefined","onClose","handleClosePopover","anchorOrigin","vertical","horizontal","paddingBottom","paddingRight","overflow","maxHeight","Object","map","Checkbox","onClickFilterName","checked","filterValue","some","filteredArray","onClickFilterValue","paddingTop","disabled","isEmpty","onClickAddFilters","filtersSelected","type","newSelected","differenceWith","isEqual","filt","concat","RemoveButton","onClickRemove","FollowedRepositoryCard","description","language","timesForked","updated","paddingY","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","xs","textAlign","setCompareRepo","replace","stopPropagation","AccordionDetails","FollowedRespositories","followedRepositories","setFollowedRepositories","isLoading","setIsLoading","filtersWithValues","setFiltersWithValues","search","filteredRepositories","setFilteredRepositories","paginatedData","setPaginatedData","currentPage","setCurrentPage","pageCount","setPageCount","fetchFollowedRepositories","useCallback","response","onClickRemoveRepo","slice","Math","ceil","length","filteredRepos","hasBeenFiltered","forEach","matches","push","initialFilters","height","width","paddingLeft","Pagination","count","page","onClickPagination","ImportRepositoryCard","name","followedRepos","onFollow","onRemoveRepo","Alert","React","forwardRef","props","ref","MuiAlert","elevation","ImportRepositories","followMsg","setFollowMsg","openSnackbar","setOpenSnackbar","importRepositories","setImportRepositories","isFetchingImport","setIsFetchingImport","isFetchingFollowed","setIsFetchingFollowed","fetchImportRepositories","getUserImportRepositories","msg","Stack","Snackbar","autoHideDuration","reason","severity","SearchGithubRow","forks","TableRow","TableCell","Card","SearchGithub","setPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","isSearching","setIsSearching","isSearching_freq","setIsSearching_freq","setError","searchResults","setSearchResults","setFollowedRepos","freqRepos","setfreqRepos","starRepos","setstarRepos","isSearching_star","setIsSearching_star","fetchUserFollowedRepos","init_state","repos","star_repos","topForksDB","topStarsDB","fetchRepos","fetchStarRepos","full_name","results","searchValues","temp","freqReposFunc","starReposFunc","flexDirection","borderBottom","marginTop","onSubmit","preventDefault","resp","label","Table","TableHead","TableBody","result","updated_at","AboutUs","marginBottom","paragraph","styles","paperContainer","backgroundImage","Image","backgroundSize","backgroundPositionX","boxContainer","Image1","backgroundRepeat","boxContainer1","Image2","flexCenteredColumns","flexSpaceEvenRows","Home","LoginModal","Dialog","maxWidth","BackdropProps","backgroundColor","opacity","DialogTitle","right","top","theme","palette","grey","CloseIcon","DialogContent","GitHubIcon","Bubble","options","colors","enableTooltip","deterministic","fontSizes","fontStyle","rotations","rotationAngles","scale","spiral","transitionDuration","ForkCluster","setData","annotations","setAnnotations","searchText","setSearchText","loading","setLoading","analyzeCode","setAnalyzeCode","analyzeFiles","setAnalyzeFiles","analyzeCommits","setAnalyzeCommits","updatedData","setUpdatedData","clusterNumber","setClusterNumber","userInputWords","setUserInputWords","userInputEx","setUserInputEx","wordcloudWords","setWordcloudWords","searchInfo","getForkClustering","ann","nodes","node","match","note","noteX","noteY","offset","noteTextOffset","wordcloud_words","wordcloud","x","FormControl","fullWidth","InputLabel","Select","MenuItem","word","navigateToFork","m","ResponsiveNetwork","margin","bottom","left","linkDistance","distance","centeringStrength","repulsivity","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","from","modifiers","linkThickness","n","motionConfig","DataGrid","columns","table_columns","rows","table_rows","autoHeight","ReactWordcloud","words","Filter","externalKeyword","externalFileName","marginLeft","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","property","visuallyHidden","EnhancedTableToolbar","pl","sm","pr","bgcolor","alpha","primary","main","action","activatedOpacity","flex","Tooltip","title","onDelete","DeleteIcon","FilterListIcon","EnhancedTable","_value$num_changed_fi","_value$num_changed_li","_value$total_commit_n","fork_name","num_changed_files","changed_files","num_changed_lines","total_commit_number","key_words","last_committed_time","created_time","parsed_words","parsed_files","createData","setOrder","setOrderBy","selected","setSelected","visibleRows","setVisibleRows","commonKeywords","setCommonKeywords","commonFiles","setCommonFiles","displayCompare","setDisplayCompare","setOpen","filteredRows","setFilteredRows","keywordSearch","setKeywordSearch","fileNameSearch","setFileNameSearch","keywordFilter","setKeywordFilter","fileNameFilter","setFileNameFilter","handleOpen","emptyRows","max","fileName","changedFiles","changedLines","numCommits","keyword","created","row","handleKeywordSearch","handleFileNameSearch","pathname","Paper","mb","mt","handleDelete","element","handleCompareButton","comparisonKeywords","comparisonFiles","commonKeywordsTemp","commonFilesTemp","commonKeywordsTempTwo","substring","commonFilesTempTwo","TableContainer","minWidth","newSelecteds","handleRequestSort","isItemSelected","fork","indexOf","labelId","hover","handleClick","selectedIndex","role","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","onKeyPress","ev","ComparisonDialogue","handleClose","marginRight","ForkList","repo1","repo2","useParams","counter","setCounter","activeForksNum","setActiveForksNum","fetchForks","active_fork_num","getTotalForksNumber","total_list","DrawerCard","link","onCloseDrawer","setColor","onMouseOver","onMouseLeave","CardContent","createTheme","typography","fontFamily","App","isLoadingUser","setIsLoadingUser","openDrawer","setOpenDrawer","fetchUser","user","getUserLogin","handleCloseDrawer","ThemeProvider","Router","handleOpenDrawer","Drawer","anchor","Divider","Routes","Route","path","Navigate","Forklist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","RecoilRoot","document","getElementById"],"mappings":"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","file":"static/js/main.a7476903.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const userState = atom({\n  key: \"userState\",\n  default: null,\n});\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ButtonLink = ({ to, linkText, color, startIcon }) => {\n  return (\n    <Link to={to} style={{ textDecoration: \"none\", color }}>\n      <Button color={color} startIcon={startIcon}>\n        {linkText}\n      </Button>\n    </Link>\n  );\n};\n\nButtonLink.propTypes = {\n  to: PropTypes.string,\n  linkText: PropTypes.string,\n  color: PropTypes.string,\n  startIcon: PropTypes.element || null,\n};\n\nexport default ButtonLink;\n","import { darken, lighten } from \"polished\";\n\nexport const LOADING_HEIGHT = \"90vh\";\nexport const DARK = \"#102424\";\nexport const PRIMARY = \"#487c8c\";\nexport const SECONDARY = \"#789cac\";\nexport const TERTIARY = \"#d8ecf4\";\nexport const REMOVE = \"#f5f5f5\";\n","import axios from \"axios\";\n\n// TODO: convert the links to be based on prod environment or development, or implement a proxy\nexport const getUserFollowedRepositories = async () => {\n  const response = await axios({\n    method: \"GET\",\n    url: \"flask/followed\",\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n  });\n\n  return response;\n};\n\nexport const getTotalForksNumber = async (value) => {\n  const response = await axios({\n    method: \"GET\",\n    url: `http://localhost:3000/flask/forklist?repo=${value}`,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n  });\n  return response;\n};\n\nexport const getRepoForks = async (value, i) => {\n  const response = await axios({\n    method: \"POST\",\n    url: `http://localhost:3000/flask/forklist`,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n    data: { repo: value, index: i },\n  });\n  return response;\n};\n\nexport const getUserImportRepositories = async () => {\n  const response = await axios({\n    method: \"GET\",\n    url: \"flask/import\",\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n  });\n  return response;\n};\n\nexport const postUserLogin = async (values) => {\n  const response = await axios.post(\"flask/auth\", {\n    code: values,\n  });\n\n  return response;\n};\n\nexport const getUserLogin = async () => {\n  const response = await axios({\n    method: \"GET\",\n    url: \"flask/auth\",\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n  });\n\n  return response;\n};\n\n// get 5 among the top forked repos on github\nexport const fetchFreqForkRepos = async (apiEndpoint) => {\n  return await fetch(apiEndpoint).then((res) => res.json()).then((data) => data[\"items\"]);\n  // return await axios.get(apiEndpoint).then((res) => res.json()).then((data) => data[\"items\"]); // axios fields not filled, could fix later to use axios rather than fetch\n};\n\nexport const postSearchGithub = async (value) => {\n  const response = await axios({\n    method: \"POST\",\n    url: \"flask/search\",\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n    data: { repo: value },\n  });\n\n  return response;\n};\n\nexport const postFollowRepository = async (value) => {\n  const response = await axios({\n    method: \"POST\",\n    url: \"flask/follow\",\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n    data: { repo: value },\n  });\n\n  return response;\n};\n\nexport const deleteUserRepository = async (value) => {\n  const response = await axios({\n    method: \"DELETE\",\n    url: \"flask/followed\",\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n    data: { repo: value },\n  });\n\n  return response;\n};\n\nexport const getForkClustering = async ({\n  repo,\n  analyzeCode,\n  analyzeFiles,\n  analyzeCommits,\n  clusterNumber,\n  updatedData,\n  userInputWords,\n}) => {\n  const response = await axios({\n    method: \"GET\",\n    url: `flask/cluster?repo=${repo}&analyzeCode=${analyzeCode}&analyzeFiles=${analyzeFiles}&analyzeCommits=${analyzeCommits}&clusterNumber=${clusterNumber}&updateData=${updatedData}&userInputWords=${userInputWords}`,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n    },\n  });\n  return response;\n};\n","import Button from \"@mui/material/Button\";\nimport { useSetRecoilState } from \"recoil\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postUserLogin } from \"./repository\";\nimport { userState } from \"./recoil/atoms\";\n\nconst Login = () => {\n  const setUser = useSetRecoilState(userState);\n  const navigate = useNavigate();\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  useEffect(() => {\n    const newUrl = window.location.href;\n    const hasCode = newUrl.includes(\"?code=\");\n\n    console.log(\"hasCode\", hasCode);\n\n    if (hasCode) {\n      const url = newUrl.split(\"?code=\")[1];\n      //const data = {\n      //  code: url[0],\n      //};\n\n      console.log(\"url\", url);\n\n      submitGithub(url);\n    }\n  }, [postUserLogin]);\n\n  const submitGithub = async (values) => {\n    setIsLoggingIn(true);\n    try {\n      const res = await postUserLogin(values);\n      console.log(\"res\", res);\n\n      if (!!res?.data?.access_token) {\n        localStorage.setItem(\"access_token\", res.data.access_token);\n        localStorage.setItem(\"username\", res.data.username);\n        setUser({ username: res.data.username });\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(\"unable to login\");\n      navigate(\"/\");\n    }\n    setIsLoggingIn(false);\n  };\n\n  const onClickLogin = () => {\n    window.location.href =\n      \"https://github.com/login/oauth/authorize?scope=user:email&client_id=2d8e058ac0d5cf153c9e\";\n  };\n\n  return (\n    <>\n      {!isLoggingIn ? (\n        <Button color=\"inherit\" onClick={onClickLogin}>\n          Login\n        </Button>\n      ) : (\n        <Button color=\"inherit\" onClick={() => {}}>\n          Logging In...\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { useSetRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userState } from \"./recoil/atoms\";\n\nconst Logout = () => {\n  const setUser = useSetRecoilState(userState);\n  const navigate = useNavigate();\n\n  const onClickLogout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"username\");\n    setUser(null);\n    navigate(\"/\");\n  };\n\n  return (\n    <Button color=\"inherit\" onClick={onClickLogout}>\n      Logout\n    </Button>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SignalCellularAltIcon from \"@mui/icons-material/SignalCellularAlt\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useRecoilValue } from \"recoil\";\nimport ButtonLink from \"./common/ButtonLink\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport { PRIMARY } from \"./common/constants\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport { userState } from \"./recoil/atoms\";\n\nconst AppHeader = ({ onOpenDrawer }) => {\n  const currentUser = useRecoilValue(userState);\n  console.log(\"appheader current\", currentUser);\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" style={{ background: PRIMARY }}>\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={onOpenDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            INFOX - Forks Insight\n          </Typography>\n          <ButtonLink\n            to=\"/followed\"\n            linkText=\"Followed Repositories\"\n            color=\"inherit\"\n            startIcon={<SignalCellularAltIcon />}\n          />\n          <ButtonLink\n            to=\"/import\"\n            linkText=\"Import Repositories\"\n            color=\"inherit\"\n            startIcon={<CloudUploadIcon />}\n          />\n          <ButtonLink\n            to=\"/search\"\n            linkText=\"Search Github\"\n            color=\"inherit\"\n            startIcon={<SearchIcon />}\n          />\n          <ButtonLink\n            to=\"/aboutus\"\n            linkText=\"About Us\"\n            color=\"inherit\"\n            startIcon={<LinkIcon />}\n          />\n          {!currentUser ? <Login /> : <Logout />}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\n// TODO: Make it appear only if it will take more than 0.5 seconds to load\nconst Loading = ({ loadingMessage }) => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={{ minHeight: \"100%\" }}\n    >\n      <CircularProgress />\n      <Box>\n        {loadingMessage ? (\n          <Typography variant=\"h6\">{loadingMessage}</Typography>\n        ) : null}\n      </Box>\n    </Grid>\n  );\n};\n\nLoading.defaultProps = {\n  loadingMessage: null,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { DARK } from \"./constants\";\n\nconst Title = ({ text }) => {\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item>\n        <Box>\n          <Typography variant=\"h3\" color={DARK}>\n            {text}\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nTitle.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Title;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Grid,\n  ButtonBase,\n  Popover,\n  Checkbox,\n  IconButton,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SECONDARY, TERTIARY } from \"./constants\";\nimport isEmpty from \"lodash/isEmpty\";\nimport differenceWith from \"lodash/differenceWith\";\nimport { isEqual } from \"lodash\";\n\nconst SearchAndFilter = ({ filters, setFilters, setSearch }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [checkedFilter, setCheckedFilter] = useState(null);\n  const [checkedFilterValues, setCheckedFilterValues] = useState([]);\n  const [addedFilters, setAddedFilters] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const onClickAddFilter = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setAnchorEl(null);\n  };\n\n  const onClickFilterName = (filter) => {\n    setCheckedFilterValues([]);\n    if (checkedFilter && checkedFilter.display === filter.display) {\n      setCheckedFilter(null);\n    } else {\n      setCheckedFilter(filter);\n    }\n  };\n\n  const onClickFilterValue = (filterValue) => {\n    if (checkedFilterValues.some((item) => item === filterValue)) {\n      const filteredArray = checkedFilterValues.filter(\n        (item) => item !== filterValue\n      );\n      setCheckedFilterValues(filteredArray);\n    } else {\n      setCheckedFilterValues([...checkedFilterValues, filterValue]);\n    }\n  };\n\n  const onClickAddFilters = () => {\n    const filtersSelected = checkedFilterValues.map((item) => ({\n      display: checkedFilter.display,\n      value: item,\n      type: checkedFilter.type,\n      key: checkedFilter.key,\n    }));\n\n    const newSelected = differenceWith(filtersSelected, addedFilters, isEqual);\n\n    setAddedFilters([...addedFilters, ...newSelected]);\n  };\n\n  const onClickRemoveFilter = (filter, value) => {\n    setAddedFilters(\n      addedFilters.filter(\n        (item) => !(item.display === filter && item.value === value)\n      )\n    );\n  };\n\n  useEffect(() => {\n    setFilters(addedFilters);\n  }, [addedFilters, setFilters]);\n\n  useEffect(() => {\n    setSearch(searchTerm);\n  }, [searchTerm, setSearch]);\n\n  const FilterBubble = ({ filter, value }) => {\n    // TODO: Even out padding on both sides of the bubble\n    return (\n      <Grid item>\n        <Box\n          sx={{ border: 4, borderRadius: 12 }}\n          style={{ borderColor: SECONDARY, background: TERTIARY }}\n          padding={1}\n        >\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <IconButton\n                onClick={() => {\n                  onClickRemoveFilter(filter, value);\n                }}\n              >\n                <CancelIcon />\n              </IconButton>\n            </Grid>\n            <Grid item>\n              <Box fontWeight=\"bold\">\n                <Typography>\n                  {filter}: {value}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    );\n  };\n\n  return (\n    <Box>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item>\n          <Typography variant=\"h5\">Search by name</Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n            }}\n            placeholder=\"Search\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <Box\n            sx={{ border: 4, borderRadius: 12 }}\n            style={{ borderColor: SECONDARY, background: TERTIARY }}\n            padding={1}\n          >\n            <ButtonBase onClick={onClickAddFilter}>\n              <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                  <AddIcon />\n                </Grid>\n                <Grid item>\n                  <Box fontWeight=\"bold\">\n                    <Typography>Add Filter</Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </ButtonBase>\n          </Box>\n          <Popover\n            anchorEl={anchorEl}\n            open={!!anchorEl}\n            id={!!anchorEl ? \"simple-popover\" : undefined}\n            onClose={handleClosePopover}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\",\n            }}\n          >\n            <Box\n              sx={{ border: 4 }}\n              style={{ borderColor: SECONDARY }}\n              padding={1}\n            >\n              <Box paddingBottom={1}>\n                <Typography variant=\"h5\">Filter by</Typography>\n              </Box>\n              <Grid container spacing={1} padding={1}>\n                <Grid item border={1} style={{ borderColor: SECONDARY }}>\n                  <Box sx={{ display: \"flex\" }}>\n                    <Box\n                      paddingRight={1}\n                      style={{ overflow: \"auto\", maxHeight: \"200px\" }}\n                    >\n                      {Object.values(filters).map((filter) => (\n                        <Grid\n                          container\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          key={filter.display}\n                        >\n                          <Grid item>\n                            <Checkbox\n                              onChange={() => {\n                                onClickFilterName(filter);\n                              }}\n                              checked={\n                                checkedFilter?.display === filter.display\n                              }\n                            />\n                          </Grid>\n                          <Grid item>\n                            <Typography>{filter.display}</Typography>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid\n                  item\n                  paddingRight={1}\n                  border={1}\n                  style={{ borderColor: SECONDARY }}\n                >\n                  {!checkedFilter ? (\n                    <Box paddingTop={1}>\n                      <Typography>\n                        Select a filter from the left side\n                      </Typography>\n                    </Box>\n                  ) : (\n                    <Box\n                      paddingRight={1}\n                      style={{ overflow: \"auto\", maxHeight: \"200px\" }}\n                    >\n                      {checkedFilter.values.map((value) => (\n                        <Grid\n                          container\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          key={value}\n                        >\n                          <Grid item>\n                            <Checkbox\n                              onChange={() => {\n                                onClickFilterValue(value);\n                              }}\n                              checked={checkedFilterValues.some(\n                                (item) => item === value\n                              )}\n                            />\n                          </Grid>\n                          <Grid item>\n                            <Typography>{value}</Typography>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Box>\n                  )}\n                </Grid>\n              </Grid>\n              <Box>\n                <Button\n                  variant=\"contained\"\n                  disabled={isEmpty(checkedFilterValues)}\n                  onClick={onClickAddFilters}\n                >\n                  Add Filters\n                </Button>\n              </Box>\n            </Box>\n          </Popover>\n        </Grid>\n        <Grid container direction=\"row\" spacing={1}>\n          {addedFilters.map((filt) => (\n            <FilterBubble\n              filter={filt.display}\n              value={filt.value}\n              key={`${filt.display}+${filt.value}`}\n            />\n          ))}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nSearchAndFilter.propTypes = {\n  filters: PropTypes.object,\n  setFilters: PropTypes.func,\n  setSearch: PropTypes.func,\n};\n\nexport default SearchAndFilter;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { PRIMARY, REMOVE } from \"./constants\";\n\nconst RemoveButton = ({ onClickRemove }) => {\n  return (\n    <Button\n      style={{ color: PRIMARY, background: REMOVE }}\n      onClick={(e) => {\n        onClickRemove(e);\n      }}\n    >\n      Remove\n    </Button>\n  );\n};\n\nexport default RemoveButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Button,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Grid,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport RemoveButton from \"./common/RemoveButton\";\nimport { SECONDARY, TERTIARY } from \"./common/constants\";\nimport { deleteUserRepository } from \"./repository\";\nimport SignalCellularAltIcon from \"@mui/icons-material/SignalCellularAlt\";\nimport { useNavigate } from \"react-router\";\nimport { PRIMARY, REMOVE } from \"./common/constants\";\n\nconst FollowedRepositoryCard = ({\n  repo,\n  description,\n  language,\n  timesForked,\n  updated,\n  onClickRemove,\n}) => {\n  const onRemove = (event) => {\n    event.stopPropagation();\n    deleteUserRepository(repo);\n    onClickRemove(repo);\n  };\n\n  const navigate = useNavigate();\n\n  const navigateToFork = () => {\n    console.log(\"repo nav\", repo);\n    navigate(`/forks/${repo}`, { replace: true });\n  };\n\n  const setCompareRepo = () => {\n    navigateToFork();\n  };\n\n  return (\n    <Box paddingY={1}>\n      <Accordion>\n        <AccordionSummary\n          style={{ background: SECONDARY }}\n          expandIcon={<ExpandMoreIcon sx={{ color: \"white\" }} />}\n        >\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item xs={9}>\n              <Typography color=\"white\">{repo}</Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Box style={{ textAlign: \"right\" }}>\n                <Button\n                  color=\"inherit\"\n                  startIcon={<SignalCellularAltIcon />}\n                  onClick={setCompareRepo}\n                  style={{ background: REMOVE }}\n                >\n                  View Forks\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item xs={1}>\n              <Box style={{ textAlign: \"center\" }}>\n                <RemoveButton onClickRemove={onRemove} />\n              </Box>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails style={{ background: TERTIARY }}>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography>Language: {language}</Typography>\n            </Grid>\n            <Grid item xs={4} style={{ textAlign: \"center\" }}>\n              <Typography>Times Forked: {timesForked}</Typography>\n            </Grid>\n            <Grid item xs={4} style={{ textAlign: \"right\" }}>\n              <Typography>Last Updated: {updated}</Typography>\n            </Grid>\n          </Grid>\n          <Typography>Project Description: {description}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nFollowedRepositoryCard.propTypes = {\n  repo: PropTypes.string,\n  description: PropTypes.string,\n  language: PropTypes.string,\n  timesForked: PropTypes.number,\n  lastUpdated: PropTypes.string,\n  onClickRemove: PropTypes.func,\n};\n\nexport default FollowedRepositoryCard;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Box, Pagination, Grid, Typography } from \"@mui/material\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { getUserFollowedRepositories } from \"./repository\";\nimport { LOADING_HEIGHT } from \"./common/constants\";\nimport Loading from \"./common/Loading\";\nimport Title from \"./common/Title\";\nimport SearchAndFilter from \"./common/SearchAndFilter\";\nimport FollowedRepositoryCard from \"./FollowedRepositoryCard\";\n\nconst FollowedRespositories = () => {\n  const [followedRepositories, setFollowedRepositories] = useState(null);\n  console.log(followedRepositories);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filtersWithValues, setFiltersWithValues] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filteredRepositories, setFilteredRepositories] =\n    useState(followedRepositories);\n  const [paginatedData, setPaginatedData] = useState(filteredRepositories);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageCount, setPageCount] = useState(1);\n\n  const PER_PAGE = 10;\n\n  console.log(\"filters\", filters);\n  console.log(\"search\", search);\n  console.log(\"filterswihvalues\", filtersWithValues);\n\n  const fetchFollowedRepositories = useCallback(async () => {\n    const response = await getUserFollowedRepositories();\n    console.log(\"followed projects\", response);\n\n    setFollowedRepositories(response.data);\n    console.log(\"res\", response);\n\n    setIsLoading(false);\n  }, []);\n\n  const onClickRemoveRepo = (value) => {\n    setFollowedRepositories(\n      followedRepositories.filter((repo) => repo.repo !== value)\n    );\n  };\n\n  const onClickPagination = (event, page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    setPaginatedData(\n      filteredRepositories?.slice(\n        (currentPage - 1) * PER_PAGE,\n        currentPage * PER_PAGE\n      )\n    );\n  }, [currentPage, filteredRepositories]);\n\n  useEffect(() => {\n    fetchFollowedRepositories();\n  }, [fetchFollowedRepositories]);\n\n  useEffect(() => {\n    setPageCount(Math.ceil(filteredRepositories?.length / PER_PAGE));\n    setCurrentPage(1);\n  }, [filteredRepositories]);\n\n  useEffect(() => {\n    const filteredRepos = [];\n    let hasBeenFiltered = false;\n\n    if (!!followedRepositories && !isEmpty(filtersWithValues)) {\n      followedRepositories.forEach((repo) => {\n        let matches = false;\n\n        if (!isEmpty(filters)) {\n          hasBeenFiltered = true;\n          filters.forEach((filt) => {\n            if (repo[filt.key] === filt.value) {\n              matches = true;\n            }\n          });\n        } else {\n          matches = true;\n        }\n\n        if (search !== \"\") {\n          hasBeenFiltered = true;\n          if (!repo.repo.includes(search)) {\n            matches = false;\n          } else {\n            matches = true;\n          }\n        }\n\n        if (matches) {\n          filteredRepos.push(repo);\n        }\n      });\n\n      setFilteredRepositories(filteredRepos);\n    } else {\n      setFilteredRepositories(followedRepositories);\n    }\n  }, [filters, search, followedRepositories]);\n\n  useEffect(() => {\n    if (!isEmpty(followedRepositories)) {\n      const initialFilters = {\n        language: {\n          key: \"language\",\n          display: \"Language\",\n          type: \"string\",\n          values: [],\n        },\n        timesForked: {\n          key: \"timesForked\",\n          display: \"Times Forked\",\n          type: \"numeric\",\n          values: [],\n        },\n        updated: {\n          key: \"updated\",\n          display: \"Last Updated\",\n          type: \"date\",\n          values: [],\n        },\n      };\n      followedRepositories.forEach(({ language, timesForked, updated }) => {\n        if (!initialFilters.language.values.some((item) => item === language)) {\n          initialFilters.language.values.push(language);\n        }\n        if (\n          !initialFilters.timesForked.values.some(\n            (item) => item === timesForked\n          )\n        ) {\n          initialFilters.timesForked.values.push(timesForked);\n        }\n        if (!initialFilters.updated.values.some((item) => item === updated)) {\n          initialFilters.updated.values.push(updated);\n        }\n      });\n\n      setFiltersWithValues(initialFilters);\n    }\n  }, [followedRepositories]);\n\n  return (\n    <Box>\n      {isLoading ? (\n        <Box height={LOADING_HEIGHT}>\n          <Loading />\n        </Box>\n      ) : (\n        <Box width=\"100%\">\n          <Title text=\"Followed Repositories\" />\n          <Box paddingLeft=\"4px\">\n            {isEmpty(followedRepositories) ? (\n              <>\n                <Box>\n                <Grid\n                container\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                style={{ minHeight: \"70vh\" }}\n              >\n                  <Typography variant=\"h4\">\n                      You are not following any repositories!\n                    </Typography>\n                    <Typography>\n                      Go to the \"Search Github\" tab to search for repositories to\n                      follow\n                    </Typography>\n                </Grid>\n              </Box>\n            </>\n            ):(\n            <>\n            {!isEmpty(paginatedData) ? (\n              <>\n                <Box>\n                  <SearchAndFilter\n                    filters={filtersWithValues}\n                    setFilters={(data) => {\n                      setFilters(data);\n                    }}\n                    setSearch={(data) => {\n                      setSearch(data);\n                    }}\n                  />\n                </Box>\n                <Box>\n                  {paginatedData?.map(\n                    ({ repo, language, description, updated, timesForked }) => (\n                      <FollowedRepositoryCard\n                        key={repo}\n                        repo={repo}\n                        language={language}\n                        description={description}\n                        updated={updated}\n                        timesForked={timesForked}\n                        onClickRemove={onClickRemoveRepo}\n                      />\n                    )\n                  )}\n                </Box>\n                <Grid\n                  container\n                  direction=\"column\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <Pagination\n                    count={pageCount}\n                    page={currentPage}\n                    onChange={onClickPagination}\n                  />\n                </Grid>\n              </>\n            ) : (\n            <>\n               <Box>\n                  <SearchAndFilter\n                    filters={filtersWithValues}\n                    setFilters={(data) => {\n                      setFilters(data);\n                    }}\n                    setSearch={(data) => {\n                      setSearch(data);\n                    }}\n                  />\n                </Box> \n                <Box>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    style={{ minHeight: \"70vh\" }}\n                  >\n                    <Typography variant=\"h4\">\n                    Search result not found!\n                  </Typography>\n                  <Typography>\n                    Go to the \"Search Github\" tab to follow desired repositories\n                  </Typography>\n                  </Grid>\n                </Box>\n              </>\n            )}\n            </>\n            )}\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default FollowedRespositories;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Grid,\n  Button,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { PRIMARY, SECONDARY, TERTIARY, REMOVE } from \"./common/constants\";\nimport { postFollowRepository, deleteUserRepository } from \"./repository\";\n\nconst ImportRepositoryCard = ({ name, description, language, timesForked, followedRepos, onFollow, onRemoveRepo }) => {\n\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <Box paddingY={1}>\n      <Accordion>\n        <AccordionSummary\n          style={{ background: SECONDARY }}\n          expandIcon={<ExpandMoreIcon sx={{ color: \"white\" }} />}\n        >\n          <Grid container direction=\"row\" alignItems=\"center\">\n\n            <Grid item xs={11}>\n              <Typography color=\"white\">{name}</Typography>\n            </Grid>\n            <Grid item xs={1}>\n              {!followedRepos?.some((repo) => repo.repo === name) ? (\n                <Button\n                  variant=\"outlined\"\n                  onClick={async (event) => {\n                    event.stopPropagation();\n                    setIsLoading(true);\n                    const res = await postFollowRepository(name);\n                    console.log(\"res\", res);\n                    onFollow(res.data);\n                    setIsLoading(false);\n                  }}\n                  style={{ color: PRIMARY, background: REMOVE }}\n                  disabled={isLoading}\n                >\n                  {isLoading ? \"Following...\" : \"Follow\"}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    deleteUserRepository(name);\n                    onRemoveRepo(name);\n                  }}\n                >\n                  Remove\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails style={{ background: TERTIARY }}>\n          <Grid container>\n            <Grid item xs={4}>\n              {\" \"}\n              <Typography>Project Description: {description}</Typography>\n            </Grid>\n            <Grid item xs={4} style={{ textAlign: \"center\" }}>\n              <Typography>Language: {language}</Typography>\n            </Grid>\n            <Grid item xs={4} style={{ textAlign: \"right\" }}>\n              <Typography>Times Forked: {timesForked}</Typography>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nImportRepositoryCard.propTypes = {\n  repo: PropTypes.string,\n  description: PropTypes.string,\n  language: PropTypes.string,\n  timesForked: PropTypes.number,\n};\n\nexport default ImportRepositoryCard;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { getUserFollowedRepositories, getUserImportRepositories } from \"./repository\";\nimport { LOADING_HEIGHT } from \"./common/constants\";\nimport Loading from \"./common/Loading\";\nimport Title from \"./common/Title\";\nimport SearchAndFilter from \"./common/SearchAndFilter\";\nimport ImportRepositoryCard from \"./ImportRepositoryCard\";\nimport Stack from \"@mui/material/Stack\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ImportRepositories = () => {\n  const [followMsg, setFollowMsg] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [importRepositories, setImportRepositories] = useState(null);\n  const [followedRepositories, setFollowedRepositories] = useState(null);\n  console.log(importRepositories);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFetchingImport, setIsFetchingImport] = useState(true);\n  const [isFetchingFollowed, setIsFetchingFollowed] = useState(true);\n  const [filtersWithValues, setFiltersWithValues] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filteredRepositories, setFilteredRepositories] =\n    useState(importRepositories);\n  console.log(\"filters\", filters);\n  console.log(\"search\", search);\n  console.log(\"filterswihvalues\", filtersWithValues);\n\n  const fetchImportRepositories = useCallback(async () => {\n    const response = await getUserImportRepositories();\n\n    setImportRepositories(response.data.importRepositories);\n    console.log(\"imported projects\", response);\n\n    setIsFetchingImport(false);\n  }, []);\n\n  const fetchFollowedRepositories = useCallback(async () => {\n    const response = await getUserFollowedRepositories();\n    console.log(\"followed projects\", response);\n\n    setFollowedRepositories(response.data);\n    console.log(\"res\", response);\n\n    setIsFetchingFollowed(false);\n  }, []);\n\n  useEffect(() => {\n    if (!isFetchingImport && !isFetchingFollowed) {\n      setIsLoading(false);\n    }\n  }, [isFetchingFollowed, isFetchingImport]);\n\n  useEffect(() => {\n    fetchImportRepositories();\n  }, [fetchImportRepositories]);\n\n  useEffect(() => {\n    fetchFollowedRepositories();\n  }, [fetchFollowedRepositories]);\n\n  useEffect(() => {\n    const filteredRepos = [];\n    let hasBeenFiltered = false;\n\n    if (!!importRepositories && !isEmpty(filtersWithValues)) {\n      importRepositories.forEach((repo) => {\n        let matches = false;\n\n        if (!isEmpty(filters)) {\n          hasBeenFiltered = true;\n          filters.forEach((filt) => {\n            if (repo[filt.key] === filt.value) {\n              matches = true;\n            }\n          });\n        } else {\n          matches = true;\n        }\n\n        if (search !== \"\") {\n          hasBeenFiltered = true;\n          if (!repo.repo.includes(search)) {\n            matches = false;\n          } else {\n            matches = true;\n          }\n        }\n\n        if (matches) {\n          filteredRepos.push(repo);\n        }\n      });\n\n      setFilteredRepositories(filteredRepos);\n    } else {\n      setFilteredRepositories(importRepositories);\n    }\n  }, [filters, search, importRepositories]);\n\n  useEffect(() => {\n    if (!isEmpty(importRepositories)) {\n      const initialFilters = {\n        language: {\n          key: \"language\",\n          display: \"Language\",\n          type: \"string\",\n          values: [],\n        },\n        timesForked: {\n          key: \"timesForked\",\n          display: \"Times Forked\",\n          type: \"numeric\",\n          values: [],\n        },\n      };\n      importRepositories.forEach(({ language, timesForked }) => {\n        if (!initialFilters.language.values.some((item) => item === language)) {\n          initialFilters.language.values.push(language);\n        }\n        if (\n          !initialFilters.timesForked.values.some(\n            (item) => item === timesForked\n          )\n        ) {\n          initialFilters.timesForked.values.push(timesForked);\n        }\n      });\n\n      setFiltersWithValues(initialFilters);\n    }\n  }, [importRepositories]);\n\n  return (\n    <Box>\n      {isLoading ? (\n        <Box height={LOADING_HEIGHT}>\n          <Loading />\n        </Box>\n      ) : (\n        <Box width=\"100%\">\n          <Title text=\"Import Repositories\" />\n          <Box paddingLeft=\"4px\">\n            {!isEmpty(importRepositories) ? (\n              <>\n                <Box>\n                  <SearchAndFilter\n                    filters={filtersWithValues}\n                    setFilters={(data) => {\n                      setFilters(data);\n                    }}\n                    setSearch={(data) => {\n                      setSearch(data);\n                    }}\n                  />\n                </Box>\n                <Box>\n                  {filteredRepositories?.map(\n                    ({ repo, language, description, updated, timesForked }) => (\n                      <ImportRepositoryCard\n                        key={repo}\n                        name={repo}\n                        language={language}\n                        description={description}\n                        timesForked={timesForked}\n                        onFollow={(data) => {\n                          setFollowMsg(data.msg);\n                          setOpenSnackbar(true);\n                          setFollowedRepositories([...followedRepositories, data.repo]);\n                        }}\n                        onRemoveRepo={(value) => {\n                          setFollowedRepositories(\n                            followedRepositories.filter(\n                              (repo) => repo.repo !== value\n                            )\n                          );\n                        }}\n                        followedRepos={followedRepositories}\n                      />\n                    )\n                  )}\n                </Box>\n              </>\n            ) : (\n              <>\n                <Box>\n                  <Typography variant=\"h5\" textAlign=\"center\">No public repositories found in account.</Typography>\n                </Box>\n              </>\n            )}\n          </Box>\n        </Box>\n      )}\n      <Stack spacing={2} sx={{ width: \"100%\" }}>\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={6000}\n          onClose={(event, reason) => {\n            if (reason === \"clickaway\") {\n              return;\n            }\n\n            setOpenSnackbar(false);\n          }}\n        >\n          <Alert\n            onClose={(event, reason) => {\n              if (reason === \"clickaway\") {\n                return;\n              }\n\n              setOpenSnackbar(false);\n            }}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            {followMsg}\n          </Alert>\n        </Snackbar>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ImportRepositories;","import React, { useState } from \"react\";\nimport {\n  Button,\n  Typography,\n  Link,\n  Card,\n  TableRow,\n  TableCell,\n  Grid,\n} from \"@mui/material\";\nimport { postFollowRepository, deleteUserRepository } from \"./repository\";\n\nconst SearchGithubRow = ({\n  name,\n  language,\n  forks,\n  updated,\n  onFollow,\n  onRemoveRepo,\n  followedRepos,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Card sx={{ padding: 1 }}>\n          <Link target=\"_blank\" to=\"\">\n            {name}\n          </Link>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              Language: {language}\n            </Grid>\n            <Grid item xs={4}>\n              Forked on Github: {forks}\n            </Grid>\n            <Grid item xs={4}>\n              Updated at: {updated}\n            </Grid>\n          </Grid>\n          <Typography></Typography>\n        </Card>\n      </TableCell>\n      <TableCell>\n        {!followedRepos?.some((repo) => repo.repo === name) ? (\n          <Button\n            variant=\"outlined\"\n            onClick={async () => {\n              setIsLoading(true);\n              const res = await postFollowRepository(name);\n              console.log(\"res\", res);\n              onFollow(res.data);\n              setIsLoading(false);\n            }}\n            disabled={isLoading}\n          >\n            {isLoading ? \"Following...\" : \"Follow\"}\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              deleteUserRepository(name);\n              onRemoveRepo(name);\n            }}\n          >\n            Remove\n          </Button>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default SearchGithubRow;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  TableHead,\n  TableRow,\n  Table,\n  TableBody,\n  TableFooter,\n  TablePagination,\n  Grid,\n  CircularProgress,\n} from \"@mui/material\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport SearchGithubRow from \"./SearchGithubRow\";\nimport { postSearchGithub, getUserFollowedRepositories, fetchFreqForkRepos } from \"./repository\";\nimport { useNavigate } from \"react-router\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SearchGithub = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n  const [isSearching_freq, setIsSearching_freq] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const [followMsg, setFollowMsg] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [followedRepos, setFollowedRepos] = useState(null);\n  const [freqRepos, setfreqRepos] = useState([]);\n  const [starRepos, setstarRepos] = useState([]);\n  const [isSearching_star, setIsSearching_star] = useState(false);\n\n  const navigate = useNavigate();\n\n  const navigateToFork = (repo) => {\n    console.log(\"repo nav\", repo);\n    navigate(`/forks/${repo}`, { replace: true });\n  };\n\n  const freqReposFunc = async (searchValues) => {\n    setIsSearching_freq(true);\n    var results = [];\n    for (var i = 0; i < searchValues.length; i++) {\n      var resp = await postSearchGithub(searchValues[i]);\n      var temp = resp.data.slice(0, 1);\n      results = results.concat(temp);\n    }\n    setfreqRepos(results);\n    setIsSearching_freq(false);\n  };\n\n  const starReposFunc = async (searchValues) => {\n    setIsSearching_star(true);\n    var results = [];\n    for (var i = 0; i < searchValues.length; i++) {\n      var resp = await postSearchGithub(searchValues[i]);\n      var temp = resp.data.slice(0, 1);\n      results = results.concat(temp);\n    }\n    setstarRepos(results);\n    setIsSearching_star(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const onClickSearch = async (event) => {\n    event.preventDefault();\n    if (searchValue.length === 0) {\n      setError(\"Please enter a value!\");\n      return;\n    } else {\n      setError(null);\n    }\n\n    setIsSearching(true);\n    console.log(\"values\", searchValue);\n    const resp = await postSearchGithub(searchValue);\n    console.log(\"resp\", resp);\n    setSearchResults(resp.data);\n    setIsSearching(false);\n  };\n\n  const fetchUserFollowedRepos = useCallback(async () => {\n    const res = await getUserFollowedRepositories();\n    setFollowedRepos(res.data);\n  }, []);\n\n  const init_state = async () => {\n    if (!isSearching) {\n      const repos = [];\n      const star_repos = [];\n      const topForksDB = `https://api.github.com/search/repositories?q=forks:%3E0&sort=forks&per_page=5`;\n      const topStarsDB = `https://api.github.com/search/repositories?q=forks:%3E0&sort=stars&per_page=5`;\n      const fetchRepos = await fetchFreqForkRepos(topForksDB);\n      const fetchStarRepos = await fetchFreqForkRepos(topStarsDB);\n      for(let i = 0; i < fetchRepos.length; i++) {\n        repos.push(fetchRepos[i].full_name);\n        star_repos.push(fetchStarRepos[i].full_name);\n      }\n      freqReposFunc(repos);\n      starReposFunc(star_repos);\n    }\n  };\n\n  useEffect(() => {\n    init_state();\n    fetchUserFollowedRepos();\n  }, [fetchUserFollowedRepos]);\n\n  return (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          borderBottom: 1,\n          padding: 3,\n        }}\n      >\n        <Typography variant=\"h5\" sx={{ marginTop: 1 }}>\n          Search on GitHub\n        </Typography>\n        <form onSubmit={onClickSearch}>\n          <Grid container alignItems=\"center\" paddingBottom={1}>\n            <Grid item paddingRight={1}>\n              <TextField\n                variant=\"standard\"\n                label=\"Repository\"\n                value={searchValue}\n                onChange={(event) => {\n                  setSearchValue(event.target.value);\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item marginTop={1}>\n              <Button variant=\"contained\" type=\"submit\">\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n        {error && (\n          <Typography variant=\"caption\" color=\"red\">\n            {error}\n          </Typography>\n        )}\n        <Box>\n          {isSearching ? (\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <CircularProgress />\n            </Grid>\n          ) : (\n            <Box>\n              {searchResults ? (\n                <Box>\n                  <Table>\n                    <TableHead />\n                    <TableBody>\n                      {searchResults.map((result) => {\n                        return (\n                          <SearchGithubRow\n                            name={result.full_name}\n                            // name={<a onClick={() => navigateToFork(result.full_name)}>{result.full_name}</a>}\n                            language={result.language}\n                            forks={result.forks}\n                            updated={result.updated_at}\n                            onFollow={(data) => {\n                              setFollowMsg(data.msg);\n                              setOpenSnackbar(true);\n                              setFollowedRepos([...followedRepos, data.repo]);\n                            }}\n                            followedRepos={followedRepos}\n                            onRemoveRepo={(value) => {\n                              setFollowedRepos(\n                                followedRepos.filter(\n                                  (repo) => repo.repo !== value\n                                )\n                              );\n                            }}\n                          />\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </Box>\n              ) : null}\n            </Box>\n          )}\n        </Box>\n      </Box>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", padding: 3 }}>\n        <Typography variant=\"h5\">Most Forked Repositories</Typography>\n        {isSearching_freq ? (\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <CircularProgress />\n          </Grid>\n        ) : (\n          <Box>\n            {freqRepos ? (\n              <Box>\n                <Table>\n                  <TableHead />\n                  <TableBody>\n                    {freqRepos.map((result) => {\n                      return (\n                        <SearchGithubRow\n                          name={result.full_name}\n                          // name={<a style={{cursor: \"pointer\"}} onClick={() => {\n                          //   console.log(\"repo nav\", result.full_name);\n                          //   navigateToFork(`${result.full_name}`)}\n                          // }>{result.full_name}</a>}\n                          language={result.language}\n                          forks={result.forks}\n                          updated={result.updated_at}\n                          onFollow={(data) => {\n                            setFollowMsg(data.msg);\n                            setOpenSnackbar(true);\n                            setFollowedRepos([...followedRepos, data.repo]);\n                          }}\n                          followedRepos={followedRepos}\n                          onRemoveRepo={(value) => {\n                            setFollowedRepos(\n                              followedRepos.filter(\n                                (repo) => repo.repo !== value\n                              )\n                            );\n                          }}\n                        />\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </Box>\n            ) : null}\n          </Box>\n        )}\n      </Box>\n\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", padding: 3 }}>\n        <Typography variant=\"h5\">Most Starred Repositories</Typography>\n        {isSearching_star ? (\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <CircularProgress />\n          </Grid>\n        ) : (\n          <Box>\n            {starRepos ? (\n              <Box>\n                <Table>\n                  <TableHead />\n                  <TableBody>\n                    {starRepos.map((result) => {\n                      return (\n                        <SearchGithubRow\n                          name={result.full_name}\n                          // name={<a style={{cursor: \"pointer\"}} onClick={() => {\n                          //   console.log(\"repo nav\", result.full_name);\n                          //   navigateToFork(`${result.full_name}`)}\n                          // }>{result.full_name}</a>}\n                          language={result.language}\n                          forks={result.forks}\n                          updated={result.updated_at}\n                          onFollow={(data) => {\n                            setFollowMsg(data.msg);\n                            setOpenSnackbar(true);\n                            setFollowedRepos([...followedRepos, data.repo]);\n                          }}\n                          followedRepos={followedRepos}\n                          onRemoveRepo={(value) => {\n                            setFollowedRepos(\n                              followedRepos.filter(\n                                (repo) => repo.repo !== value\n                              )\n                            );\n                          }}\n                        />\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </Box>\n            ) : null}\n          </Box>\n        )}\n      </Box>\n\n      <Stack spacing={2} sx={{ width: \"100%\" }}>\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={6000}\n          onClose={(event, reason) => {\n            if (reason === \"clickaway\") {\n              return;\n            }\n\n            setOpenSnackbar(false);\n          }}\n        >\n          <Alert\n            onClose={(event, reason) => {\n              if (reason === \"clickaway\") {\n                return;\n              }\n\n              setOpenSnackbar(false);\n            }}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            {followMsg}\n          </Alert>\n        </Snackbar>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default SearchGithub;","import React from \"react\";\nimport { Box, Typography, Card } from \"@mui/material\";\nimport Link from '@mui/material/Link';\nimport Button from '@mui/material/Button';\n\nconst AboutUs = () => {\n\n    return (\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <Card sx={{ padding: 2, marginBottom: 1, marginTop: 1, width: 95 + \"%\" }}>\n                <Typography variant=\"h4\">About</Typography>\n                <Typography paragraph variant=\"body1\">INFOX comes out of a research project at\n                    Carnegie Mellon University, in collaboration with researchers from the IT University\n                    Copenhagen, Peking University, and the University of Passau, exploring how to improve\n                    collaboration and coordination in open-source and variant-rich software development.\n                </Typography>\n                <Typography paragraph variant=\"body1\">\n                    Given the overwhelming numbers of forks in many popular repositories,\n                    we observed redundant development and lost contributions at scale and heard\n                    from interviewed developers that they were interested in activities in forks\n                    but overwhelmed by the sheer scale of the task and the lack of adequate tools.\n                    INFOX set out to understand activities in forks and provide insights to\n                    interested observers of a project and all its forks. The current beta release\n                    focuses on simple analytics, but we plan many more functions as we move along.\n                </Typography>\n                <Typography paragraph variant=\"body1\">\n                    INFOX is open source (MIT license) and <Link href=\"https://github.com/FancyCoder0/INFOX\">hosted on GitHub.</Link> Forks and pull requests are\n                    welcome of course. :)\n                </Typography>\n            </Card>\n            <Card sx={{ padding: 2, marginBottom: 1, width: 95 + \"%\" }}>\n                <Typography variant=\"h4\">People</Typography>\n                <Typography variant=\"body1\"><Link href=\"http://luyaoren.com/\" target=\"_blank\">Luyao Ren</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.cs.cmu.edu/~shuruiz/\" target=\"_blank\">Shurui Zhou</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.cs.cmu.edu/~ckaestne/\" target=\"_blank\">Christian Kästner</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"http://www.itu.dk/people/wasowski/\" target=\"_blank\">Andrzej Wąsowski</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/xinyan-he/\" target=\"_blank\">Xinyan He</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/laithhanania/\" target=\"_blank\">Laith Hanania</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/johnperry99/\" target=\"_blank\">John Perry</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/cansin-varol-5b8532165/\" target=\"_blank\">Cansin Varol</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/john-espedido/\" target=\"_blank\">John Melric Espedido</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/ron-hu-8aba60177/\" target=\"_blank\">Ron Hu</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/andrew-minyoung-kim/\" target=\"_blank\">Andrew Kim</Link></Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.linkedin.com/in/ron-thomas-9260bb1b0/\" target=\"_blank\">Ron Thomas</Link></Typography>\n            </Card>\n            <Card sx={{ padding: 2, width: 95 + \"%\" }}>\n                <Typography variant=\"h4\">Publication</Typography>\n                <Typography variant=\"body1\"><Link href=\"http://luyaoren.com/\">L. Ren</Link>,\n                    <Link href=\"https://www.cs.cmu.edu/~shuruiz/\"> S. Zhou</Link>,\n                    <Link href=\"https://www.cs.cmu.edu/~ckaestne/\"> C. Kästner</Link>,\n                    and <Link href=\"http://www.itu.dk/people/wasowski/\">A. Wąsowski</Link>.\n                    <b>Identifying Redundancies in Fork-based Development. </b>In Proceedings of the 27th IEEE\n                    International Conference on Software Analysis, Evolution and Reengineering (SANER)\n                    [ <Link href=\"https://www.cs.cmu.edu/~ckaestne/pdf/saner19.pdf\">paper </Link>]\n                </Typography>\n                <Typography variant=\"body1\"><Link href=\"http://luyaoren.com/\">L. Ren</Link>\n                    , <Link href=\"https://www.cs.cmu.edu/~shuruiz/\"> S. Zhou</Link>\n                    , and <Link href=\"https://www.cs.cmu.edu/~ckaestne/\"> C. Kästner</Link>\n                    . <b>Poster: Forks Insight:\n                        Providing an Overview of GitHub Forks. </b>In Proceedings of the 40th International\n                    Conference on Software Engineering (ICSE) [ poster ] [ paper ]</Typography>\n                <Typography variant=\"body1\"><Link href=\"https://www.cs.cmu.edu/~shuruiz/\"> S. Zhou</Link>\n                    , <Link href=\"http://www.itu.dk/people/scas/webpage/index.html\">Ș. Stănciulescu</Link>\n                    , <Link href=\"https://www.infosun.fim.uni-passau.de/spl/people-lessenich.php\">O. Leßenich</Link>\n                    , <Link href=\"http://sei.pku.edu.cn/~xiongyf04/\">Y. Xiong</Link>,\n                    <Link href=\"http://www.itu.dk/people/wasowski/\">A. Wąsowski</Link>\n                    , and <Link href=\"https://www.cs.cmu.edu/~ckaestne/\"> C. Kästner</Link>\n                    . <b>Identifying Features in Forks.</b>\n                    In Proceedings of the 40th International Conference on Software Engineering (ICSE),\n                    New York, NY: ACM Press, May 2018. Acceptance rate: 21 % (105/502). [ pdf ]\n                </Typography>\n            </Card>\n            <Card sx={{display:\"flex\", marginTop:1, width:50+\"%\", justifyContent:\"space-evenly\"}}>\n                <Button variant=\"text\" target=\"_blank\" href=\"http://forks-insight.com/about\">Contact Us</Button>\n                <Button variant=\"text\" target=\"_blank\" href=\"https://github.com/FancyCoder0/INFOX\">INFOX on GitHub</Button>\n                <Button variant=\"text\" target=\"_blank\" href=\"https://github.com/FancyCoder0/INFOX/issues\">Open An Issue</Button>\n            </Card>\n        </Box>\n    );\n};\n\nexport default AboutUs;\n","export default __webpack_public_path__ + \"static/media/network.f7220782.jpg\";","export default __webpack_public_path__ + \"static/media/overview.20faaa4f.png\";","export default __webpack_public_path__ + \"static/media/tagging.a4f4020b.png\";","import { Button, Card, Link, Paper, Typography } from \"@mui/material\";\nimport { Box, height } from \"@mui/system\";\nimport React from \"react\";\nimport Image from \"./static/img/network.jpg\"\nimport Image1 from \"./static/img/overview.png\"\nimport Image2 from \"./static/img/tagging.png\"\n\nconst styles = {\n  paperContainer: {\n    height: 650,\n    width: '100%',\n    backgroundImage: `url(${Image})`,\n    backgroundSize: 'cover',\n    backgroundPositionX: 'center',\n\n  },\n  boxContainer: {\n    width: \"20%\",\n    backgroundImage: `url(${Image1})`,\n    backgroundSize: 'contain',\n    backgroundPositionX: 'center',\n    backgroundRepeat: 'no-repeat'\n  },\n  boxContainer1: {\n    width: \"30%\",\n    backgroundImage: `url(${Image2})`,\n    backgroundSize: 'contain',\n    backgroundPositionX: 'center',\n    backgroundRepeat: 'no-repeat'\n  },\n\n  flexCenteredColumns: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  flexSpaceEvenRows: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n  }\n};\n\nconst Home = () => {\n  return (\n    <Box sx={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <Box variant=\"elevated\" style={styles.paperContainer}>\n        <Box variant=\"elevated\" style={styles.flexCenteredColumns} sx={{ background: \"rgba(0, 0, 0, 0.6)\", height: 650 }}>\n          <Typography variant=\"h1\" color=\"white\" textAlign=\"center\">INFOX <sub>beta</sub></Typography>\n          <Typography variant=\"h2\" color=\"white\" textAlign=\"center\">Insights into Forks</Typography>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Typography variant=\"body1\" color=\"white\" textAlign=\"center\">Overwhelmed with the activities in forks of a project?\n          </Typography>\n\n          <Typography variant=\"body1\" color=\"white\" textAlign=\"center\">Which forks are active?\n          </Typography>\n\n          <Typography variant=\"body1\" color=\"white\" textAlign=\"center\">Which contain interesting ideas?\n          </Typography>\n\n          <Typography variant=\"body1\" color=\"white\" textAlign=\"center\">Which contain already finished features to build upon, rather than reimplement?\n          </Typography>\n\n        </Box>\n      </Box>\n      <Card style={styles.flexSpaceEvenRows} sx={{ padding: 2, marginTop: 2 }}>\n        <Box style={styles.boxContainer}></Box>\n        <Typography variant=\"h4\" width=\"30%\">Concise Overview of a Project's Forks<Typography variant=\"body1\" paragraph>\n          Explore a compact list of all forks highlighting key insights, rather than scrolling forever in\n          a network graph. We sift all forks and summarize changes with statistics and representative\n          keywords. Sort forks by activity volume and recency or search for keywords.\n\n        </Typography></Typography>\n      </Card>\n\n      <Card style={styles.flexSpaceEvenRows} sx={{ padding: 2, marginTop: 2 }}>\n        <Typography variant=\"h4\" width=\"20%\">Label and Monitor Forks<Typography variant=\"body1\" paragraph>Identify and\n          label forks with interesting activities, for example to scout for ideas and pull requests.\n          Monitor interesting forks to keep up with changes.\n          Track the activity of an entire community on GitHub. Get started by signing in with your\n          GitHub account.\n\n        </Typography></Typography>\n        <Box style={styles.boxContainer1}></Box>\n      </Card>\n      <Card style={styles.flexSpaceEvenRows} sx={{ padding: 2, marginTop: 2 }}>\n        <Typography variant=\"h4\" sx={{ width: \"67%\", }}>Research and Contribution <Typography variant=\"body1\" paragraph>INFOX comes out\n          of an NSF-funded research project at Carnegie Mellon University, exploring how to improve\n          collaboration and coordination in open-source software development. INFOX is open source\n          and hosted for the community. We would love to hear your ideas and feedback. Explore the\n          <Link target=\"_blank\" href=\"https://github.com/FancyCoder0/INFOX\"> source</Link> or <Link target=\"_blank\" href=\"https://github.com/FancyCoder0/INFOX/issues\">open an issue.</Link> </Typography>\n\n        </Typography>\n      </Card>\n\n      <Card variant=\"elevated\" sx={{ display: \"flex\", marginTop: 1, width: \"100%\", justifyContent: \"space-evenly\" }}>\n        <Button variant=\"text\" target=\"_blank\" href=\"http://forks-insight.com/about\">Contact Us</Button>\n        <Button variant=\"text\" target=\"_blank\" href=\"https://github.com/FancyCoder0/INFOX\">INFOX on GitHub</Button>\n        <Button variant=\"text\" target=\"_blank\" href=\"https://github.com/FancyCoder0/INFOX/issues\">Open An Issue</Button>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport Typography from \"@mui/material/Typography\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { useNavigate } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport { DARK } from \"./common/constants\";\n\nconst LoginModal = () => {\n  const navigate = useNavigate();\n\n  const onClose = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <Box>\n      <Dialog\n        open={true}\n        variant=\"outlined\"\n        onClose={onClose}\n        maxWidth=\"xs\"\n        BackdropProps={{\n          style: { backgroundColor: \"#212121\", opacity: 0.9 },\n        }}\n      >\n        <DialogTitle>\n          <Typography variant=\"h5\" color={DARK}>\n            Please Log In\n          </Typography>\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <Box paddingBottom={2}>\n            <Typography>\n              Please login /or sign up using your Github account to access the\n              full list of features!\n            </Typography>\n          </Box>\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Button\n              style={{ background: \"#424242\", color: \"white\" }}\n              variant=\"contained\"\n              onClick={() => {\n                window.location.href =\n                  \"https://github.com/login/oauth/authorize?scope=user:email&client_id=2d8e058ac0d5cf153c9e\";\n              }}\n            >\n              <Box paddingRight={1}>\n                <GitHubIcon />\n              </Box>\n              Log in with Github\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default LoginModal;\n","import React from \"react\";\nimport {\n    Box,\n    Button,\n    TextField,\n    Grid,\n    Checkbox,\n    Typography,\n    Select,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    IconButton,\n  } from \"@mui/material\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SECONDARY, TERTIARY } from \"./common/constants\";\nimport isEmpty from \"lodash/isEmpty\";\nimport differenceWith from \"lodash/differenceWith\";\nimport { isEqual } from \"lodash\";\n\n\nconst Bubble = ({onClickRemoveFilter,value}) => {\n\n    return (\n        <Grid item>\n          <Box\n            sx={{ border: 4, borderRadius: 12 }}\n            style={{ borderColor: SECONDARY, background: TERTIARY }}\n            padding={1}\n          >\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <Grid item>\n                <IconButton\n                  onClick={() => {\n                    onClickRemoveFilter(value);\n                  }}\n                >\n                  <CancelIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <Box fontWeight=\"bold\">\n                  <Typography>\n                    {value}\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      );\n}\n\n\n\nexport default Bubble;","import React, { useState } from \"react\";\nimport { getForkClustering } from \"./repository\";\nimport { ResponsiveNetworkCanvas,ResponsiveNetwork } from \"@nivo/network\";\nimport ReactWordcloud from \"react-wordcloud\";\nimport {\n  Box,\n  Button,\n  TextField,\n  Grid,\n  Checkbox,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport Loading from \"./common/Loading\";\nimport FilterBubble from \"./common/SearchAndFilter\";\nimport { isEmpty, words } from \"lodash\";\nimport Bubble from \"./Bubble\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst options = {\n  // colors: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\n  colors: [\"#A31FF0\", \"#FAF061\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\n  enableTooltip: true,\n  deterministic: false,\n  fontSizes: [20, 100],\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  padding: 1,\n  rotations: 3,\n  rotationAngles: [0],\n  scale: \"sqrt\",\n  spiral: \"archimedean\",\n  transitionDuration: 1000,\n};\n\nconst ForkCluster = () => {\n  const [data, setData] = useState(null);\n  const [annotations, setAnnotations] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [analyzeCode, setAnalyzeCode] = useState(true);\n  const [analyzeFiles, setAnalyzeFiles] = useState(true);\n  const [analyzeCommits, setAnalyzeCommits] = useState(true);\n  const [updatedData, setUpdatedData] = useState(false);\n  const [clusterNumber, setClusterNumber] = useState(10);\n  const [userInputWords, setUserInputWords] = useState([]);\n  const [userInputEx, setUserInputEx] = useState(\"\");\n  const [wordcloudWords, setWordcloudWords] = useState({});\n  const [error, setError] = useState(false);\n\n  const onClickRecluster = async (event) => {\n    event.preventDefault();\n    console.log(\"This has been reached\");\n  }\n\n  const navigate = useNavigate();\n\n  const navigateToFork = (userInputWords) => {\n    console.log(userInputWords)\n    let userInput = userInputWords\n    let start_url = '/forks/'\n    navigate(start_url.concat(userInput));\n  };\n\n  const onClickSearch = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const searchInfo = {\n      repo: searchText,\n      analyzeCode: analyzeCode,\n      analyzeFiles: analyzeFiles,\n      analyzeCommits: analyzeCommits,\n      clusterNumber: clusterNumber,\n      updatedData: updatedData,\n      userInputWords: userInputWords,\n    };\n\n    try {\n      const response = await getForkClustering(searchInfo);\n      console.log(\"resp\", response);\n\n      setData(response.data);\n\n      let ann = [];\n      response.data.nodes.forEach((node) => {\n        if (node.height === 1) {\n          ann.push({\n            type: \"circle\",\n            match: {\n              id: node.id,\n            },\n            note: node.id,\n            noteX: 10,\n            noteY: 30,\n            offset: 2,\n            noteTextOffset: 3,\n          });\n        }\n      });\n      console.log(\"Here 2\");\n      setAnnotations(ann);\n      let wordcloud_words = {};\n      wordcloud_words = response.data.wordcloud.map((x) => ({\n        text: x.slice(0)[0],\n        value: x.slice(-1)[0].length,\n      }));\n      console.log(\"Here 3\");\n      setWordcloudWords(wordcloud_words);\n      setError(false);\n    } catch {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Box>\n      <Box>\n        <form onSubmit={onClickSearch}>\n          <Grid container alignItems=\"center\" paddingBottom={1}>\n            <Grid item paddingRight={1}>\n              <TextField\n                variant=\"standard\"\n                label=\"Repository\"\n                value={searchText}\n                onChange={(event) => {\n                  setSearchText(event.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item marginTop={1}>\n              <Button variant=\"contained\" type=\"submit\">\n                Search\n              </Button>\n            </Grid>\n            <Grid item marginTop={1}>\n              <Grid container>\n                <Grid item>\n                  <Grid container>\n                    <Grid item>\n                      <Checkbox\n                        checked={analyzeCode}\n                        onChange={(e) => {\n                          setAnalyzeCode(e.target.checked);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item marginTop={1}>\n                      <Typography>Analyze Code Changes</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container>\n                    <Grid item>\n                      <Checkbox\n                        checked={analyzeFiles}\n                        onChange={(e) => {\n                          setAnalyzeFiles(e.target.checked);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item marginTop={1}>\n                      <Typography>Analyze Files Changed</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container>\n                    <Grid item>\n                      <Checkbox\n                        checked={analyzeCommits}\n                        onChange={(e) => {\n                          setAnalyzeCommits(e.target.checked);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item marginTop={1}>\n                      <Typography>Analyze Commit Messages</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container>\n                    <Grid item>\n                      <Checkbox\n                        checked={updatedData}\n                        onChange={(e) => {\n                          setUpdatedData(e.target.checked);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item marginTop={1}>\n                      <Typography>Use Most Recent Data to Cluster</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={1} marginTop={1} paddingLeft={1}>\n              <FormControl fullWidth>\n                <InputLabel id=\"clusterNumber\">Clusters</InputLabel>\n                <Select\n                  id=\"clusterNumber\"\n                  label=\"Clusters\"\n                  value={clusterNumber}\n                  onChange={(e) => {\n                    setClusterNumber(e.target.value);\n                  }}\n                >\n                  <MenuItem value={5}>Five</MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={15}>Fifteen</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Box>\n            <Grid container>\n              <Grid item paddingRight={1}>\n                <TextField\n                  variant=\"standard\"\n                  label=\"Exclude Key Words\"\n                  value={userInputEx}\n                  onChange={(event) => {\n                    setUserInputEx(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item marginTop={1}>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  onClick={(event) => {\n                    setUserInputWords([...userInputWords, userInputEx]);\n                    setUserInputEx(\"\");\n                  }}\n                >\n                  Add\n                </Button>\n              </Grid>\n              <Grid container>\n                {!isEmpty(userInputWords) ? (\n                  <Grid container>\n                    {userInputWords.map((value) => {\n                      return (\n                        <Bubble\n                          value={value}\n                          onClickRemoveFilter={() => {\n                            setUserInputWords(\n                              userInputWords.filter((word) => word !== value)\n                            );\n                          }}\n                        />\n                      );\n                    })}\n                  </Grid>\n                ) : null}\n              </Grid>\n            </Grid>\n          </Box>\n        </form>\n      </Box>\n\n      {loading ? (\n        <Box height=\"80vh\">\n          <Loading loadingMessage=\"Please wait. This may take a few minutes.\" />\n        </Box>\n      ) : error ? (\n        <Box>\n          Clustering in progess! Please check back soon...\n        </Box>\n      ) : data ? (\n        <div\n          style={{\n            height: \"100vh\",\n          }}\n        >\n          <Button\n            variant=\"outlined\"\n            onClick= {()=>navigateToFork(data.repo)}\n            sx={{ m:2 }}\n          >\n            Go to fork list\n          </Button>\n          <ResponsiveNetwork\n            data={data}\n            margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n            linkDistance={function (e) {\n              return e.distance;\n            }}\n            centeringStrength={0.4}\n            repulsivity={500}\n            iterations={260}\n            nodeColor={function (e) {\n              return e.color;\n            }}\n            nodeBorderWidth={1}\n            nodeBorderColor={{\n              from: \"color\",\n              modifiers: [[\"darker\", 0.8]],\n            }}\n            linkThickness={function (n) {\n              return 2 + 2 * n.target.data.height;\n            }}\n            annotations={annotations}\n            motionConfig={'wobbly'}\n          />\n\n          <DataGrid\n            columns={data.table_columns}\n            rows={data.table_rows}\n            autoHeight={true}\n          />\n\n          <Grid>\n            <ReactWordcloud options={options} words={wordcloudWords} />\n          </Grid>\n\n\n        </div>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default ForkCluster;\n\n\n// <table border=\"1\" class=\"styled-table\">\n//   <thead>\n//     <tr style=\"text-align: right;\">\n//       <th></th>\n//       <th>Keywords</th>\n//       <th>Repositories</th>\n//     </tr>\n//   </thead>\n//   <tbody>\n//     <tr>\n//       <th>0</th>\n//       <td>log (\" mongo connected !\"); })</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>1</th>\n//       <td>err ); res</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>2</th>\n//       <td>render (\" pages</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>3</th>\n//       <td>signin \",</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>4</th>\n//       <td>logout (); res</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>5</th>\n//       <td>req , res</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>6</th>\n//       <td>true })</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>7</th>\n//       <td>log</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>8</th>\n//       <td>function ()</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//     <tr>\n//       <th>9</th>\n//       <td>err</td>\n//       <td>malhotrakartik , AmanJha199 , parth-verma</td>\n//     </tr>\n//   </tbody>\n// </table>","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    Box,\n    Button,\n    Typography,\n    TextField,\n    Grid,\n    ButtonBase,\n    Popover,\n    Checkbox,\n    IconButton,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SECONDARY, TERTIARY } from \"./constants\";\nimport isEmpty from \"lodash/isEmpty\";\nimport differenceWith from \"lodash/differenceWith\";\nimport { isEqual } from \"lodash\";\n\nconst Filter = ({ filters, setFilters, setSearch, externalKeyword, externalFileName }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [checkedFilter, setCheckedFilter] = useState(null);\n    const [checkedFilterValues, setCheckedFilterValues] = useState([]);\n    const [addedFilters, setAddedFilters] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const onClickAddFilter = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClosePopover = () => {\n        setAnchorEl(null);\n    };\n\n    const onClickFilterName = (filter) => {\n        setCheckedFilterValues([]);\n        if (checkedFilter && checkedFilter.display === filter.display) {\n            setCheckedFilter(null);\n        } else {\n            setCheckedFilter(filter);\n        }\n    };\n\n    const onClickFilterValue = (filterValue) => {\n        if (checkedFilterValues.some((item) => item === filterValue)) {\n            const filteredArray = checkedFilterValues.filter(\n                (item) => item !== filterValue\n            );\n            setCheckedFilterValues(filteredArray);\n        } else {\n            setCheckedFilterValues([...checkedFilterValues, filterValue]);\n        }\n    };\n\n    const onClickAddFilters = () => {\n        const filtersSelected = checkedFilterValues.map((item) => ({\n            display: checkedFilter.display,\n            value: item,\n            type: checkedFilter.type,\n            key: checkedFilter.key,\n        }));\n\n        const newSelected = differenceWith(filtersSelected, addedFilters, isEqual);\n\n        setAddedFilters([...addedFilters, ...newSelected]);\n    };\n\n    const onClickRemoveFilter = (filter, value) => {\n        setAddedFilters(\n            addedFilters.filter(\n                (item) => !(item.display === filter && item.value === value)\n            )\n        );\n    };\n\n    useEffect(() => {\n        if (externalFileName) {\n            setAddedFilters([...addedFilters, ...externalFileName]);\n            console.log(\"External file name:\", externalFileName)\n        }\n    }, [externalFileName]);\n\n    useEffect(() => {\n        if (externalKeyword) {\n            setAddedFilters([...addedFilters, ...externalKeyword]);\n            console.log(\"External keyword name\", externalKeyword)\n        }\n    }, [externalKeyword]);\n\n    useEffect(() => {\n        setFilters(addedFilters);\n    }, [addedFilters, setFilters]);\n\n    useEffect(() => {\n        setSearch(searchTerm);\n    }, [searchTerm, setSearch]);\n\n    const FilterBubble = ({ filter, value }) => {\n        // TODO: Even out padding on both sides of the bubble\n        return (\n            <Grid item>\n                <Box\n                    sx={{ border: 4, borderRadius: 12 }}\n                    style={{ borderColor: SECONDARY, background: TERTIARY }}\n                    padding={1}\n                >\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid item>\n                            <IconButton\n                                onClick={() => {\n                                    onClickRemoveFilter(filter, value);\n                                }}\n                            >\n                                <CancelIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <Box fontWeight=\"bold\">\n                                <Typography>\n                                    {filter}: {value}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Grid>\n        );\n    };\n\n    return (\n        <Box>\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"flex-start\"\n                alignItems=\"center\"\n                spacing={1}\n            >\n                <Grid item>\n                    {/* <Typography variant=\"h5\">Add a filter</Typography> */}\n                </Grid>\n                <Grid item>\n                    {/* <TextField\n                        onChange={(e) => {\n                            setSearchTerm(e.target.value);\n                        }}\n                        placeholder=\"Search\"\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    /> */}\n                </Grid>\n                <Grid item>\n                    <Box\n                        sx={{ border: 4, borderRadius: 12 }}\n                        style={{ borderColor: SECONDARY, background: TERTIARY }}\n                        padding={1}\n                    >\n                        <ButtonBase onClick={onClickAddFilter}>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                    <AddIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Box fontWeight=\"bold\">\n                                        <Typography>Add Filter</Typography>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </ButtonBase>\n                    </Box>\n                    <Popover\n                        anchorEl={anchorEl}\n                        open={!!anchorEl}\n                        id={!!anchorEl ? \"simple-popover\" : undefined}\n                        onClose={handleClosePopover}\n                        anchorOrigin={{\n                            vertical: \"bottom\",\n                            horizontal: \"left\",\n                        }}\n                    >\n                        <Box\n                            sx={{ border: 4 }}\n                            style={{ borderColor: SECONDARY }}\n                            padding={1}\n                        >\n                            <Box paddingBottom={1}>\n                                <Typography variant=\"h5\">Filter by</Typography>\n                            </Box>\n                            <Grid container spacing={1} padding={1}>\n                                <Grid item border={1} style={{ borderColor: SECONDARY }}>\n                                    <Box sx={{ display: \"flex\" }}>\n                                        <Box\n                                            paddingRight={1}\n                                            style={{ overflow: \"auto\", maxHeight: \"200px\" }}\n                                        >\n                                            {Object.values(filters).map((filter) => (\n                                                <Grid\n                                                    container\n                                                    direction=\"row\"\n                                                    alignItems=\"center\"\n                                                    key={filter.display}\n                                                >\n                                                    <Grid item>\n                                                        <Checkbox\n                                                            onChange={() => {\n                                                                onClickFilterName(filter);\n                                                            }}\n                                                            checked={\n                                                                checkedFilter?.display === filter.display\n                                                            }\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography>{filter.display}</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            ))}\n                                        </Box>\n                                    </Box>\n                                </Grid>\n                                <Grid\n                                    item\n                                    paddingRight={1}\n                                    border={1}\n                                    style={{ borderColor: SECONDARY }}\n                                >\n                                    {!checkedFilter ? (\n                                        <Box paddingTop={1}>\n                                            <Typography>\n                                                Select a filter from the left side\n                                            </Typography>\n                                        </Box>\n                                    ) : (\n                                        <Box\n                                            paddingRight={1}\n                                            style={{ overflow: \"auto\", maxHeight: \"200px\" }}\n                                        >\n                                            {checkedFilter.values.map((value) => (\n                                                <Grid\n                                                    container\n                                                    direction=\"row\"\n                                                    alignItems=\"center\"\n                                                    key={value}\n                                                >\n                                                    <Grid item>\n                                                        <Checkbox\n                                                            onChange={() => {\n                                                                onClickFilterValue(value);\n                                                            }}\n                                                            checked={checkedFilterValues.some(\n                                                                (item) => item === value\n                                                            )}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography>{value}</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            ))}\n                                        </Box>\n                                    )}\n                                </Grid>\n                            </Grid>\n                            <Box>\n                                <Button\n                                    variant=\"contained\"\n                                    disabled={isEmpty(checkedFilterValues)}\n                                    onClick={onClickAddFilters}\n                                >\n                                    Add Filters\n                                </Button>\n                            </Box>\n                        </Box>\n                    </Popover>\n                </Grid>\n                <Grid container direction=\"row\" spacing={1} marginLeft={2} marginTop={1} marginBottom={1}>\n                    {addedFilters.map((filt) => (\n                        <FilterBubble\n                            filter={filt.display}\n                            value={filt.value}\n                            key={`${filt.display}+${filt.value}`}\n                        />\n                    ))}\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nFilter.propTypes = {\n    filters: PropTypes.object,\n    setFilters: PropTypes.func,\n    setSearch: PropTypes.func,\n};\n\nexport default Filter;\n","// Inspired by MUI documentation: https://mui.com/components/tables/\nimport React, { useState, forwardRef, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { Link } from \"react-router-dom\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport { useRecoilState } from \"recoil\";\nimport { Button, DialogContent, Snackbar, TextField } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { differenceWith, intersectionWith, isEqual } from \"lodash\";\nimport { getRepoForks } from \"./repository\";\nimport { getTotalForksNumber } from \"./repository\";\nimport Loading from \"./common/Loading\"\nimport Filter from \"./common/Filter\";\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport isEmpty from \"lodash/isEmpty\";\n\nconst Alert = forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction createData(\n  fork_name,\n  num_changed_files,\n  changed_files,\n  num_changed_lines,\n  total_commit_number,\n  key_words,\n  last_committed_time,\n  created_time\n) {\n\n  // console.log(\"key words received:\", key_words)\n  let parsed_words = [];\n  for (let i = 0; i < key_words.length && i < 10; i++) {\n    parsed_words.push(key_words[i].concat(\", \"));\n  }\n\n  let parsed_files = [];\n  for (let i = 0; i < changed_files.length && i < 10; i++) {\n    parsed_files.push(changed_files[i].concat(\", \"));\n  }\n  // console.log(\"Parsed words:\", parsed_words)\n\n  return {\n    fork_name,\n    num_changed_files,\n    parsed_files,\n    changed_files,\n    num_changed_lines,\n    total_commit_number,\n    parsed_words,\n    key_words,\n    last_committed_time,\n    created_time,\n  };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"fork_name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Fork\",\n  },\n  {\n    id: \"num_changed_files\",\n    numeric: false,\n    disablePadding: false,\n    label: \"# Changed Files\",\n  },\n  {\n    id: \"changed_files\",\n    numeric: false,\n    disablePadding: false,\n    label: \"File List\",\n  },\n  {\n    id: \"num_changed_lines\",\n    numeric: false,\n    disablePadding: false,\n    label: \"# Changed Lines\",\n  },\n  {\n    id: \"total_commit_number\",\n    numeric: false,\n    disablePadding: false,\n    label: \"# Commits\",\n  },\n  {\n    id: \"keywords\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Keywords\",\n  },\n  {\n    id: \"last_committed_time\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last Commit Time\",\n  }, {\n    id: \"created_time\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Creation Date\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\",\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            ),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: \"1 1 100%\" }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n\n        </Typography>\n      ) : (\n        <Typography\n          sx={{ flex: \"1 1 100%\" }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          {/* Search Results */}\n\n        </Typography>\n\n      )}\n\n      {numSelected > 0 ? (\n        <>\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={props.onDelete}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n\n        </>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst EnhancedTable = ({ data }) => {\n  console.log(\"data\", data);\n  const rows = [];\n\n  data.forEach((value) => {\n    rows.push(\n      createData(\n        value.fork_name,\n        value.num_changed_files ?? 0,\n        value.changed_files,\n        value.num_changed_lines ?? 0,\n        value.total_commit_number ?? 0,\n        value.key_words,\n        value.last_committed_time,\n        value.created_time\n      )\n    );\n  });\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"num_changed_files\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [visibleRows, setVisibleRows] = useState(rows);\n  const [commonKeywords, setCommonKeywords] = useState([]);\n  const [commonFiles, setCommonFiles] = useState([]);\n  const [displayCompare, setDisplayCompare] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState([]);\n  const [filtersWithValues, setFiltersWithValues] = useState(null);\n  const [filteredRows, setFilteredRows] = useState(rows);\n  const [search, setSearch] = useState(\"\");\n  const [keywordSearch, setKeywordSearch] = useState(null);\n  const [fileNameSearch, setFileNameSearch] = useState(null);\n  const [keywordFilter, setKeywordFilter] = useState(null);\n  const [fileNameFilter, setFileNameFilter] = useState(null);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = visibleRows.map((row) => row);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, row) => {\n    const selectedIndex = selected.indexOf(row);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, row);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = () => {\n    const filteredRows = visibleRows.filter(\n      (element) => !selected.includes(element)\n    );\n    setVisibleRows(filteredRows);\n    setSelected([]);\n  };\n\n  const handleCompareButton = () => {\n    console.log(\"Selected forks:\", selected)\n\n    const maxLength = 65;\n\n    let comparisonKeywords = [];\n    for (let i = 0; i < selected.length; i++) {\n      let words = selected[i][\"key_words\"];\n      comparisonKeywords.push(words);\n    }\n\n    let comparisonFiles = [];\n    for (let i = 0; i < selected.length; i++) {\n      let words = selected[i][\"changed_files\"];\n      comparisonFiles.push(words);\n    }\n\n    let commonKeywordsTemp = [];\n    for (let i = 1; i < comparisonKeywords.length; i++) {\n      commonKeywordsTemp = comparisonKeywords[0].filter(x => comparisonKeywords[i].includes(x));\n    }\n\n    let commonFilesTemp = [];\n    for (let i = 1; i < comparisonFiles.length; i++) {\n      commonFilesTemp = comparisonFiles[0].filter(x => comparisonFiles[i].includes(x));\n    }\n\n    let commonKeywordsTempTwo = [];\n    for (let i = 0; i < commonKeywordsTemp.length; i++) {\n      if (commonKeywordsTemp[i].length < maxLength) {\n        commonKeywordsTempTwo.push(commonKeywordsTemp[i].concat(\", \"));\n      } else {\n        commonKeywordsTempTwo.push(commonKeywordsTemp[i].substring(0, maxLength).concat(\", \"));\n      }\n    }\n\n    let commonFilesTempTwo = [];\n    for (let i = 0; i < commonFilesTemp.length; i++) {\n      if (commonFilesTemp[i].length < maxLength) {\n        commonFilesTempTwo.push(commonFilesTemp[i].concat(\", \"));\n      } else {\n        commonFilesTempTwo.push(commonFilesTemp[i].substring(0, maxLength).concat(\"..., \"));\n      }\n    }\n\n    setCommonKeywords(commonKeywordsTempTwo);\n    setCommonFiles(commonFilesTempTwo);\n    setDisplayCompare(true);\n    handleOpen();\n\n    console.log(commonKeywordsTempTwo)\n    console.log(comparisonFiles)\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  function getCurrentURL () {\n    return window.location.href\n  }\n  \n\n  const isSelected = (fork) => selected.indexOf(fork) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - visibleRows.length) : 0;\n\n  // console.log(\"Filters with values init:\", filtersWithValues);\n\n  useEffect(() => {\n    const filteredRepos = [];\n    let hasBeenFiltered = false;\n\n    if (\n      !!rows &&\n      !isEmpty(filtersWithValues) &&\n      !isEmpty(filters)\n    ) {\n      rows.forEach((repo) => {\n        let matches = false;\n        if (!isEmpty(filters)) {\n          hasBeenFiltered = true;\n          filters.forEach((filt) => {\n            console.log(\"filt:\", filt)\n            if (filt.key == \"changed_files\") {\n              console.log(\"filter value\", filt.value);\n              repo[filt.key].forEach((fileName) => {\n                if (fileName === filt.value) {\n                  matches = true;\n                }\n              });\n            } else if (filt.key == \"key_words\") {\n              console.log(\"filter value\", filt.value);\n              repo[filt.key].forEach((word) => {\n                if (word === filt.value) {\n                  matches = true;\n                }\n              });\n            }\n            else if (repo[filt.key] === filt.value) {\n              matches = true;\n            }\n          });\n        }\n\n        if (search !== \"\" && matches) {\n          hasBeenFiltered = true;\n          if (!repo.repo.includes(search)) {\n            matches = false;\n          }\n        }\n\n        if (matches) {\n          filteredRepos.push(repo);\n        }\n      });\n\n      console.log(\"Filtered rows list:\", filteredRepos);\n      console.log(\"Filters: \", filters)\n      setFilteredRows(filteredRepos);\n      setVisibleRows(filteredRepos);\n    } else {\n      setFilteredRows(rows);\n      setVisibleRows(rows);\n    }\n  }, [filters, search, data]);\n  useEffect(() => {\n    const initialFilters = {\n      changedFiles: {\n        key: \"num_changed_files\",\n        display: \"# of Changed Files\",\n        type: \"numeric\",\n        values: [],\n      },\n      fileName: {\n        key: \"changed_files\",\n        display: \"File Name\",\n        type: \"string\",\n        values: [],\n      },\n      changedLines: {\n        key: \"num_changed_lines\",\n        display: \"# of Changed Lines\",\n        type: \"numeric\",\n        values: [],\n      },\n      numCommits: {\n        key: \"total_commit_number\",\n        display: \"# of Commits\",\n        type: \"numeric\",\n        values: [],\n      },\n      keyword: {\n        key: \"key_words\",\n        display: \"Keyword\",\n        type: \"string\",\n        values: [],\n      },\n      updated: {\n        key: \"last_committed_time\",\n        display: \"Last Updated\",\n        type: \"date\",\n        values: [],\n      },\n      created: {\n        key: \"created_time\",\n        display: \"Created\",\n        type: \"date\",\n        values: [],\n      }\n    };\n    rows?.forEach((row) => {\n      // console.log(\"for each row: \", row);\n      if (!initialFilters.changedFiles.values.some((item) => item === row.num_changed_files)) {\n        initialFilters.changedFiles.values.push(row.num_changed_files);\n      }\n\n      row.changed_files.forEach((fileName) => {\n        if (!initialFilters.fileName.values.some((item) => item === fileName)) {\n          initialFilters.fileName.values.push(fileName);\n        }\n        // console.log(\"word in key words list:\", fileName)\n      });\n\n      if (!initialFilters.changedLines.values.some((item) => item === row.num_changed_lines)) {\n        initialFilters.changedLines.values.push(row.num_changed_lines);\n      }\n      if (!initialFilters.numCommits.values.some((item) => item === row.total_commit_number)) {\n        initialFilters.numCommits.values.push(row.total_commit_number);\n      }\n      row.key_words.forEach((word) => {\n        if (!initialFilters.keyword.values.some((item) => item === word)) {\n          initialFilters.keyword.values.push(word);\n        }\n        // console.log(\"word in key words list:\", word)\n      });\n\n      if (!initialFilters.updated.values.some((item) => item === row.last_committed_time)) {\n        initialFilters.updated.values.push(row.last_committed_time);\n      }\n      if (!initialFilters.created.values.some((item) => item === row.created_time)) {\n        initialFilters.created.values.push(row.created_time);\n      }\n    });\n\n    setFiltersWithValues(initialFilters);\n    console.log(\"Initial filters: \", initialFilters);\n\n  }, [data]);\n\n  const updateKeywordSearch = (e) => {\n    setKeywordSearch(e.target.value);\n    console.log(\"Keyword search term:\", e.target.value);\n  }\n\n  const updateFileNameSearch = (e) => {\n    setFileNameSearch(e.target.value);\n    console.log(\"File name search term:\", e.target.value);\n  }\n\n  const handleKeywordSearch = (e) => {\n    let newFilter = {\n      key: \"key_words\",\n      display: \"Keyword\",\n      type: \"string\",\n      value: keywordSearch,\n    }\n    if(keywordSearch != \"\"){\n      setKeywordFilter([newFilter]);\n    }\n    \n  }\n\n  const handleFileNameSearch = (e) => {\n    let newFilter = {\n      key: \"changed_files\",\n      display: \"File Name\",\n      type: \"string\",\n      value: fileNameSearch,\n    }\n    if(fileNameSearch != \"\"){\n      setFileNameFilter([newFilter]);\n    }\n    \n  }\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Typography variant=\"h3\"\n                  sx={{m:2}}>\n        {window.location.pathname.split(\"/\")[2].concat('/').concat(window.location.pathname.split(\"/\")[3])}</Typography>\n      <Paper sx={{ width: \"100%\", mb: 2, mt:1 }}>\n        <Box>\n          {!isEmpty(filtersWithValues) ?\n            <Box>\n              <Filter\n                filters={filtersWithValues}\n                setFilters={(data) => {\n                  setFilters(data);\n                }}\n                setSearch={(data) => {\n                  setSearch(data);\n                }}\n                externalKeyword={keywordFilter}\n                externalFileName={fileNameFilter}\n              />\n\n            </Box>\n            : null}\n        </Box>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          onDelete={handleDelete}\n        />\n        {selected.length > 0 && <Button onClick={handleCompareButton}>Compare Selected Forks</Button>}\n\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={visibleRows.length}\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n              {stableSort(visibleRows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.fork_name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.fork_name}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.num_changed_files}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.parsed_files}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.num_changed_lines}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.total_commit_number}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.parsed_words}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.last_committed_time}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.created_time}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={visibleRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n          <TextField onKeyPress={(ev) => {\n            if (ev.key === 'Enter') {\n              handleKeywordSearch();\n              ev.preventDefault();\n            }\n          }} placeholder=\"Search for custom keyword\" onChange={updateKeywordSearch}></TextField>\n          <Button onClick={handleKeywordSearch}>Search</Button>\n        </Box>\n        <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n          <TextField onKeyPress={(ev) => {\n            if (ev.key === 'Enter') {\n              handleFileNameSearch();\n              ev.preventDefault();\n            }\n          }} sx={{ marginLeft: 1 }} placeholder=\"Search for custom file name\" onChange={updateFileNameSearch}></TextField>\n          <Button onClick={handleFileNameSearch}>Search</Button>\n        </Box>\n\n\n      </Box>\n      <ComparisonDialogue open={open} commonFiles={commonFiles} commonKeywords={commonKeywords} onClose={handleClose}></ComparisonDialogue>\n\n    </Box>\n  );\n};\n\nconst ComparisonDialogue = ({ open, commonKeywords, commonFiles, onClose }) => {\n  const handleClose = () => {\n    onClose();\n  }\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth={'lg'} fullWidth={true}>\n      <DialogTitle>Fork Comparison</DialogTitle>\n      <DialogContent>\n        <Box sx={{ display: \"flex\" }}>\n          {commonKeywords.length > 0 && <Paper sx={{ width: \"50%\", padding: 1, marginRight: 1 }}>\n            <Typography variant=\"h6\">Common Words from Selected Forks</Typography>\n            <Typography paragraph>{commonKeywords}</Typography>\n          </Paper>}\n          {commonFiles.length > 0 && <Paper sx={{ width: \"50%\", padding: 1 }}>\n            <Typography variant=\"h6\">Common Files Changed from Selected Forks</Typography>\n            <Typography paragraph>{commonFiles}</Typography>\n          </Paper>}\n        </Box>\n      </DialogContent>\n\n    </Dialog>\n  );\n}\n\nComparisonDialogue.propTypes = {\n  open: PropTypes.bool.isRequired,\n}\n\nconst ForkList = () => {\n  const { repo1, repo2 } = useParams();\n  const [data, setData] = useState(null);\n  //counter for forks analyzed \n  const [counter, setCounter] = useState(0);\n  const [activeForksNum, setActiveForksNum] = useState(0);\n\n  const fetchForks = useCallback(async (repo) => {\n    console.log('repo1',repo1);\n    console.log('repo2', repo2);\n\n    //get total num of forks needs to be fetched\n    const active_fork_num = await getTotalForksNumber(repo);\n    console.log(\"Active forks number is \", active_fork_num.data)\n    setActiveForksNum(active_fork_num.data)\n\n    let total_list = []\n    let i = 0\n    while (i < active_fork_num.data) {\n        let res = await getRepoForks(repo, i);\n        total_list.push(res.data.forks[0])\n        i += 1\n        setCounter(i)\n    }\n    console.log(total_list)\n    setData(total_list);\n  }, []);\n\n  useEffect(() => {\n    const repo = repo1 + \"/\" + repo2;\n    fetchForks(repo);\n  }, [fetchForks]);\n\n  return (\n    <>{data ? <EnhancedTable data={data} /> : <Loading loadingMessage={\"There are \" + activeForksNum + \" active forks in total, currently \" + counter+ \" analyzed.\"}></Loading>}</>\n  );\n};\n\nexport default ForkList;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport ButtonBase from \"@mui/material/ButtonBase\";\nimport { PRIMARY, TERTIARY } from \"./common/constants\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst DrawerCard = ({ title, description, link, onCloseDrawer }) => {\n  const [color, setColor] = useState(\"white\");\n  const navigate = useNavigate();\n  return (\n    <Box padding={1}>\n      <ButtonBase\n        onClick={() => {\n          onCloseDrawer();\n          navigate(link);\n        }}\n      >\n        <Card\n          variant=\"outlined\"\n          style={{ backgroundColor: color }}\n          onMouseOver={() => {\n            setColor(TERTIARY);\n          }}\n          onMouseLeave={() => {\n            setColor(\"white\");\n          }}\n        >\n          <CardContent>\n            <Box textAlign=\"left\" width={400}>\n              <Typography variant=\"h6\" color={PRIMARY}>\n                <b>{title}</b>\n              </Typography>\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                {description}\n              </Typography>\n            </Box>\n          </CardContent>\n        </Card>\n      </ButtonBase>\n    </Box>\n  );\n};\n\nexport default DrawerCard;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport { Grid, Typography, Drawer, IconButton, Divider } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { userState } from \"./recoil/atoms\";\nimport AppHeader from \"./AppHeader\";\nimport FollowedRespositories from \"./FollowedRepositories\";\nimport ImportRepositories from \"./ImportRepositories\";\nimport SearchGithub from \"./SearchGithub\";\nimport AboutUs from \"./AboutUs\";\nimport Home from \"./Home\";\nimport LoginModal from \"./LoginModal\";\nimport ForkCluster from \"./ForkCluster\";\nimport { getUserLogin } from \"./repository\";\nimport Forklist from \"./Forklist\";\nimport DrawerCard from \"./DrawerCard\";\nimport \"./static/css/App.css\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: \"Roboto\",\n  },\n});\n\nconst App = () => {\n  const setUser = useSetRecoilState(userState);\n  const currentUser = useRecoilValue(userState);\n  const [isLoadingUser, setIsLoadingUser] = useState(true);\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const fetchUser = useCallback(async () => {\n    setIsLoadingUser(true);\n    console.log(\"fetchUser\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const username = localStorage.getItem(\"username\");\n    console.log(access_token, username);\n\n    if (!access_token) {\n      setUser(null);\n    } else {\n      const user = await getUserLogin();\n      console.log(\"test\", user);\n\n      if (user?.data) {\n        localStorage.setItem(\"username\", user.data.username);\n        setUser(user);\n      } else {\n        setUser(null);\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"username\");\n      }\n    }\n    setIsLoadingUser(false);\n  }, [setUser]);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  // useEffect(() => {\n  //   document.html.style.width = 600;\n  //   document.html.style.height = 600;\n  // }, []);\n\n  const handleCloseDrawer = () => {\n    setOpenDrawer(false);\n  };\n\n  const handleOpenDrawer = () => {\n    setOpenDrawer(true);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box>\n        <Router>\n          <AppHeader onOpenDrawer={handleOpenDrawer} />\n          <Drawer anchor=\"left\" open={openDrawer} onClose={handleCloseDrawer}>\n            <Grid container padding={2}>\n              <Grid item xs={11}>\n                <Typography variant=\"h4\">Fork Analysis</Typography>\n              </Grid>\n              <Grid item xs={1}>\n                <IconButton onClick={handleCloseDrawer}>\n                  <CloseIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Divider />\n            <DrawerCard\n              title=\"Fork Clustering\"\n              description=\"Cluster forks of a respository according to keywords in their commit messages.\"\n              link=\"/cluster\"\n              onCloseDrawer={handleCloseDrawer}\n            />\n            <DrawerCard\n              title=\"Fork Comparison\"\n              description=\"Compare forks against each other in terms of code changes. Includes: files changed, number of commits, lines changes, etc.\"\n              onCloseDrawer={handleCloseDrawer}\n              link=\"/compare\"\n            />\n            <DrawerCard\n              title=\"Fork Conflict Detection\"\n              description=\"Check for possible conflicts for a fork\"\n              onCloseDrawer={handleCloseDrawer}\n              link=\"/conflict\"\n            />\n          </Drawer>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/login\" element={<LoginModal />} />\n            <Route\n              path=\"/private\"\n              element={\n                !isEmpty(currentUser) ? (\n                  <div>private</div>\n                ) : (\n                  <Navigate to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              path=\"/followed\"\n              element={\n                !isEmpty(currentUser) ? (\n                  <FollowedRespositories />\n                ) : (\n                  <Navigate to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              path=\"/import\"\n              element={\n                !isEmpty(currentUser) ? (\n                  <ImportRepositories />\n                ) : (\n                  <Navigate to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              path=\"/search\"\n              element={\n                !isEmpty(currentUser) ? (\n                  <SearchGithub />\n                ) : (\n                  <Navigate to=\"/login\" />\n                )\n              }\n            />\n            <Route path=\"/aboutus\" element={<AboutUs />} />\n            <Route\n              path=\"/cluster\"\n              element={\n                !isEmpty(currentUser) ? (\n                  <ForkCluster />\n                ) : (\n                  <Navigate to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              path=\"/forks/:repo1/:repo2\"\n              element={\n                !isEmpty(currentUser) ? (\n                  <Forklist />\n                ) : (\n                  <Navigate to=\"/followed\" />\n                )\n              }\n            />\n          </Routes>\n        </Router>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}